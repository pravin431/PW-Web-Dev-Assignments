In JavaScript, operators are categorized based on the number of operands they take. Here's a differentiation between unary, binary, and ternary operators, along with examples for each:

1. Unary Operators:
Unary operators operate on a single operand, meaning they take only one input.
Examples:

javascript
 
let x = 5;

// Unary minus (-)
let y = -x;   // Result: -5

// Unary plus (+)
let z = +x;   // Result: 5 (No change in value)

// Increment (++)
x++;          // Increment x by 1

// Decrement (--)
x--;          // Decrement x by 1
2. Binary Operators:
Binary operators operate on two operands, meaning they take two inputs.
Examples:

javascript
 
let a = 10;
let b = 5;

// Addition (+)
let sum = a + b;     // Result: 15

// Subtraction (-)
let difference = a - b;  // Result: 5

// Multiplication (*)
let product = a * b;  // Result: 50

// Division (/)
let quotient = a / b;  // Result: 2

// Modulus (%)
let remainder = a % b;  // Result: 0
3. Ternary Operator:
The ternary operator is the only operator that takes three operands. It's a shorthand way to write an if-else statement.
Syntax:

javascript
 
condition ? expression_if_true : expression_if_false;
Example:

javascript
 
let age = 20;

// Ternary operator to check if a person is eligible to vote
let eligibility = (age >= 18) ? "Eligible" : "Not Eligible";
console.log(eligibility);  // Result: "Eligible"