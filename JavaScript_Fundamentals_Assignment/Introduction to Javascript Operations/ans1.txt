Operators in JavaScript are symbols or keywords that perform operations on one or more operands to produce a result. They play a crucial role in programming by allowing developers to manipulate variables, values, and expressions, making it possible to perform various computations and actions within a program. Here are some key roles and reasons why operators are essential in programming:

1. Arithmetic Operations:
Operators like +, -, *, /, and % perform basic arithmetic operations, enabling the manipulation of numeric values.
javascript

let a = 10;
let b = 5;
let sum = a + b;  // 15
2. Comparison Operations:
Comparison operators (==, ===, !=, !==, <, >, <=, >=) are used to compare values and determine the truthiness of conditions.
javascript

let x = 5;
let y = 10;
console.log(x > y);  // false
3. Logical Operations:
Logical operators (&&, ||, !) perform logical operations, allowing the creation of complex conditions and decision-making in code.
javascript

let isAdult = true;
let hasLicense = false;
let canDrive = isAdult && hasLicense;  // false
4. Assignment Operations:
Assignment operators (=, +=, -=, *=, /=) are used to assign values to variables and perform compound assignments.
javascript

let num = 10;
num += 5;  // num is now 15
5. Unary Operations:
Unary operators (++, --, +, -, !) operate on a single operand, performing actions like incrementing or decrementing.
javascript

let counter = 0;
counter++;  // counter is now 1
6. Bitwise Operations:
Bitwise operators (&, |, ^, ~, <<, >>, >>>) manipulate the binary representation of numbers.
javascript

let num1 = 5;   // Binary: 101
let num2 = 3;   // Binary: 011
let result = num1 & num2;  // Bitwise AND: 001 (decimal 1)
7. String Concatenation:
The + operator is also used for string concatenation, allowing the combination of strings.
javascript

let firstName = "John";
let lastName = "Doe";
let fullName = firstName + " " + lastName;  // "John Doe"
